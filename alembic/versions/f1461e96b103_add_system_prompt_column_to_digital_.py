"""Add system_prompt column to digital_humans

Revision ID: f1461e96b103
Revises: 
Create Date: 2025-08-07 16:49:42.274701

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f1461e96b103'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=128), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('digital_humans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='数字人名称'),
    sa.Column('short_description', sa.String(length=200), nullable=True, comment='简短描述'),
    sa.Column('detailed_description', sa.Text(), nullable=True, comment='详细介绍'),
    sa.Column('avatar_url', sa.String(length=500), nullable=True, comment='头像URL'),
    sa.Column('type', sa.String(length=50), nullable=False, comment='数字人类型'),
    sa.Column('skills', sa.JSON(), nullable=True, comment='专业领域技能列表'),
    sa.Column('personality', sa.JSON(), nullable=True, comment='性格特征配置'),
    sa.Column('conversation_style', sa.String(length=50), nullable=True, comment='对话风格'),
    sa.Column('temperature', sa.Float(), nullable=True, comment='AI温度参数'),
    sa.Column('max_tokens', sa.Integer(), nullable=True, comment='最大token数'),
    sa.Column('system_prompt', sa.Text(), nullable=True, comment='系统提示词'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='模板是否启用（启用后可用于创建对话）'),
    sa.Column('is_public', sa.Boolean(), nullable=True, comment='是否公开模板'),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_trained_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_digital_humans_id'), 'digital_humans', ['id'], unique=False)
    op.create_table('conversations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('digital_human_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True, comment='会话标题'),
    sa.Column('thread_id', sa.String(length=100), nullable=False, comment='LangChain线程ID'),
    sa.Column('status', sa.Enum('active', 'archived', 'deleted', name='conversation_status'), nullable=True, comment='会话状态'),
    sa.Column('last_message_at', sa.DateTime(timezone=True), nullable=True, comment='最后消息时间'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['digital_human_id'], ['digital_humans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('thread_id')
    )
    op.create_index(op.f('ix_conversations_id'), 'conversations', ['id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False, comment='对话ID'),
    sa.Column('role', sa.Enum('user', 'assistant', 'system', name='message_role'), nullable=False, comment='消息角色'),
    sa.Column('content', sa.Text(), nullable=False, comment='消息内容'),
    sa.Column('tokens_used', sa.Integer(), nullable=True, comment='使用的token数量'),
    sa.Column('message_metadata', sa.JSON(), nullable=True, comment='消息元数据'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_conversations_id'), table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_digital_humans_id'), table_name='digital_humans')
    op.drop_table('digital_humans')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
